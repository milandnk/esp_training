[1/10] Performing build step for 'bootloader'
[1/1] cd "/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/http/http_echo_server/build/bootloader/esp-idf/esptool_py" && /home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python /home/dnk120/esp/esp-idf-release-v5.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/http/http_echo_server/build/bootloader/bootloader.bin
Bootloader binary size 0x5510 bytes. 0x2af0 bytes (34%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable HTTP_ECHO_SERVER.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/dnk120/Desktop/milan/trainning/esp32/esp trainning/http/http_echo_server/build/HTTP_ECHO_SERVER.bin
[7/8] cd "/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/http/http_echo_server/build/esp-idf/esptool_py" && /home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python /home/dnk120/esp/esp-idf-release-v5.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/http/http_echo_server/build/partition_table/partition-table.bin /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/http/http_echo_server/build/HTTP_ECHO_SERVER.bin
HTTP_ECHO_SERVER.bin binary size 0xea580 bytes. Smallest app partition is 0x100000 bytes. 0x15a80 bytes (8%) free.
[7/8] cd /home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py && /home/dnk120/.espressif/tools/cmake/3.24.0/bin/cmake -D IDF_PATH=/home/dnk120/esp/esp-idf-release-v5.3 -D "SERIAL_TOOL=/home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python;;/home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D "WORKING_DIRECTORY=/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/http/http_echo_server/build" -P /home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 HTTP_ECHO_SERVER.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_1v8)
Crystal is 40MHz
MAC: 68:b6:b3:3e:16:3c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x000fafff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21776 bytes to 13446...
Writing at 0x00000000... (100 %)
Wrote 21776 bytes (13446 compressed) at 0x00000000 in 0.6 seconds (effective 286.4 kbit/s)...
Hash of data verified.
Compressed 959872 bytes to 596197...
Writing at 0x00010000... (2 %)
Writing at 0x0001d44d... (5 %)
Writing at 0x0002756a... (8 %)
Writing at 0x0002c3b8... (10 %)
Writing at 0x00034c9d... (13 %)
Writing at 0x0003ed8d... (16 %)
Writing at 0x00044a9b... (18 %)
Writing at 0x0004b2bd... (21 %)
Writing at 0x00051ba1... (24 %)
Writing at 0x00057a72... (27 %)
Writing at 0x0005d9f9... (29 %)
Writing at 0x000637ed... (32 %)
Writing at 0x00069f85... (35 %)
Writing at 0x0006ee8d... (37 %)
Writing at 0x00073f3d... (40 %)
Writing at 0x00079077... (43 %)
Writing at 0x0007e235... (45 %)
Writing at 0x00083770... (48 %)
Writing at 0x00088942... (51 %)
Writing at 0x0008ea0b... (54 %)
Writing at 0x000943b3... (56 %)
Writing at 0x00099fd8... (59 %)
Writing at 0x0009fc64... (62 %)
Writing at 0x000a5736... (64 %)
Writing at 0x000ab092... (67 %)
Writing at 0x000b0ea0... (70 %)
Writing at 0x000b7441... (72 %)
Writing at 0x000bcf27... (75 %)
Writing at 0x000c2b1f... (78 %)
Writing at 0x000c822e... (81 %)
Writing at 0x000cd82d... (83 %)
Writing at 0x000d4c0f... (86 %)
Writing at 0x000dff7a... (89 %)
Writing at 0x000e5f1d... (91 %)
Writing at 0x000ec416... (94 %)
Writing at 0x000f2c08... (97 %)
Writing at 0x000f7d9c... (100 %)
