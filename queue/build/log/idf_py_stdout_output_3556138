[1/10] Performing build step for 'bootloader'
[1/1] cd "/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/queue/build/bootloader/esp-idf/esptool_py" && /home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python /home/dnk120/esp/esp-idf-release-v5.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/queue/build/bootloader/bootloader.bin
Bootloader binary size 0x5510 bytes. 0x2af0 bytes (34%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable adc_dma.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/dnk120/Desktop/milan/trainning/esp32/esp trainning/queue/build/adc_dma.bin
[7/8] cd "/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/queue/build/esp-idf/esptool_py" && /home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python /home/dnk120/esp/esp-idf-release-v5.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/queue/build/partition_table/partition-table.bin /home/dnk120/Desktop/milan/trainning/esp32/esp\ trainning/queue/build/adc_dma.bin
adc_dma.bin binary size 0x36720 bytes. Smallest app partition is 0x100000 bytes. 0xc98e0 bytes (79%) free.
[7/8] cd /home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py && /home/dnk120/.espressif/tools/cmake/3.24.0/bin/cmake -D IDF_PATH=/home/dnk120/esp/esp-idf-release-v5.3 -D "SERIAL_TOOL=/home/dnk120/.espressif/python_env/idf5.4_py3.10_env/bin/python;;/home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D "WORKING_DIRECTORY=/home/dnk120/Desktop/milan/trainning/esp32/esp trainning/queue/build" -P /home/dnk120/esp/esp-idf-release-v5.3/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 adc_dma.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE
Crystal is 40MHz
MAC: d8:3b:da:b0:73:60
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00046fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21776 bytes to 13446...
Writing at 0x00000000... (100 %)
Wrote 21776 bytes (13446 compressed) at 0x00000000 in 0.6 seconds (effective 278.2 kbit/s)...
Hash of data verified.
Compressed 223008 bytes to 112087...
Writing at 0x00010000... (14 %)
Writing at 0x0001cd98... (28 %)
Writing at 0x00022ee4... (42 %)
Writing at 0x00029889... (57 %)
Writing at 0x00030d9f... (71 %)
Writing at 0x0003adec... (85 %)
Writing at 0x00040f70... (100 %)
Wrote 223008 bytes (112087 compressed) at 0x00010000 in 2.6 seconds (effective 676.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 500.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
